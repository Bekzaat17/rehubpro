# rehubpro/reminders/tasks/schedule_reminders.py
from celery import shared_task
from django.utils import timezone
from dateutil.relativedelta import relativedelta

from reminders.models import Reminder
from reminders.enums import RepeatInterval
from notifications.services.notification_service import NotificationService


@shared_task
def schedule_reminders():
    now = timezone.now()

    # –ë—É—Ñ–µ—Ä –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ Celery —á—É—Ç—å –æ—Ç—Å—Ç–∞—ë—Ç
    reminders = Reminder.objects.filter(
        is_active=True,
        datetime__lte=now + timezone.timedelta(minutes=1),
    )

    for reminder in reminders:
        # –Ø–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        if now < reminder.datetime:
            continue

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏
        message = f"{reminder.text}\n\nüïí –í—Ä–µ–º—è: {reminder.datetime.astimezone().strftime('%d.%m.%Y %H:%M')}"

        NotificationService().send(
            user=reminder.user,
            title=reminder.title,
            message=message
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ —Ç–∏–ø—É –ø–æ–≤—Ç–æ—Ä–∞
        if reminder.repeat == RepeatInterval.ONCE:
            reminder.is_active = False
        elif reminder.repeat == RepeatInterval.DAILY:
            reminder.datetime += timezone.timedelta(days=1)
        elif reminder.repeat == RepeatInterval.WEEKLY:
            reminder.datetime += timezone.timedelta(weeks=1)
        elif reminder.repeat == RepeatInterval.MONTHLY:
            reminder.datetime += relativedelta(months=1)

        reminder.last_triggered_at = now
        reminder.save()