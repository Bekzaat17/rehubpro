import os
from django.conf import settings
from slugify import slugify

from references.models import (
    EmotionalState, PhysicalState, FamilyActivity,
    MrpActivity, Motivation, DailyDynamics,
    CharacterTrait, ResidentRole
)


def safe_slugify(name):
    slug = slugify(name)
    return slug if slug else f"slug-{abs(hash(name))}"


def fill_if_missing(model, values):
    for name in values:
        slug = safe_slugify(name)
        model.objects.update_or_create(
            slug=slug,
            defaults={"name": name}
        )


def create_emotional_data():
    fill_if_missing(EmotionalState, [
        '–†–æ–≤–Ω–æ–µ', '–¢—Ä–µ–≤–æ–∂–Ω–æ–µ', '–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ', '–ü–æ–¥–∞–≤–ª–µ–Ω–Ω–æ–µ'
    ])
    fill_if_missing(PhysicalState, [
        '–•–æ—Ä–æ—à–µ–µ', '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ', '–ü–ª–æ—Ö–æ–µ'
    ])
    fill_if_missing(FamilyActivity, [
        '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å', '–û—Ç—Å—Ç—Ä–∞–Ω—ë–Ω–Ω–æ—Å—Ç—å'
    ])
    fill_if_missing(MrpActivity, [
        '–ê–∫—Ç–∏–≤–µ–Ω', '–£–º–µ—Ä–µ–Ω', '–ü–∞—Å—Å–∏–≤–µ–Ω'
    ])
    fill_if_missing(Motivation, [
        '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è', '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è', '–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è', '–í—ã–Ω—É–∂–¥–µ–Ω–Ω–∞—è'
    ])
    fill_if_missing(DailyDynamics, [
        '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è', '–°—Ç–∞–±–∏–ª—å–Ω–∞—è', '–ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è'
    ])


def create_character_traits():
    traits = [
        ("–±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("–±–µ–∑—É–º–∏–µ", "defect"),
        ("–±—Ä–µ–∑–≥–ª–∏–≤–æ—Å—Ç—å", "defect"),
        ("–≤–æ—Ä–æ–≤—Å—Ç–≤–æ", "defect"),
        ("–≤—Å–ø—ã–ª—å—á–∏–≤–æ—Å—Ç—å", "defect"),
        ("–≤—ã—Å–æ–∫–æ–º–µ—Ä–∏–µ", "defect"),
        ("–≥–æ—Ä–¥—ã–Ω—è", "defect"),
        ("–∂–∞–ª–æ—Å—Ç—å –∫ —Å–µ–±–µ", "defect"),
        ("–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å", "defect"),
        ("–∑–∞–∫—Ä—ã—Ç–æ—Å—Ç—å", "defect"),
        ("–≥–∏–ø–µ—Ä–∫–æ–Ω—Ç—Ä–æ–ª—å", "defect"),
        ("–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è", "defect"),
        ("–∏–Ω—Ñ–∞–Ω—Ç–∏–ª—å–Ω–æ—Å—Ç—å", "defect"),
        ("–∏–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å", "defect"),
        ("–ª–µ–Ω—å", "defect"),
        ("–ª–∏—Ü–µ–º–µ—Ä–∏–µ", "defect"),
        ("–ª–æ–∂—å", "defect"),
        ("–Ω–µ—á–µ—Å—Ç–Ω–æ—Å—Ç—å", "defect"),
        ("–º–∞–Ω–∏–ø—É–ª—è—Ç–∏–≤–Ω–æ—Å—Ç—å", "defect"),
        ("–º–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "defect"),
        ("–º—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "defect"),
        ("–Ω–∞–≥–ª–æ—Å—Ç—å", "defect"),
        ("–Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "defect"),
        ("–Ω–µ–ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("–Ω–µ—Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å", "defect"),
        ("–Ω–µ—Ç–µ—Ä–ø–∏–º–æ—Å—Ç—å", "defect"),
        ("–Ω–µ—É–≤–∞–∂–µ–Ω–∏–µ", "defect"),
        ("–Ω–∏–∑–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞", "defect"),
        ("–æ–¥–µ—Ä–∂–∏–º–æ—Å—Ç—å", "defect"),
        ("–æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ", "defect"),
        ("–ø—Ä–µ–¥—É–±–µ–∂–¥—ë–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("–ø—Ä–µ–Ω–µ–±—Ä–µ–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "defect"),
        ("–ø—Ä–∏—Ç–≤–æ—Ä—Å—Ç–≤–æ", "defect"),
        ("–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤", "defect"),
        ("—Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "defect"),
        ("–æ–±–∏–¥–∞", "defect"),
        ("—Ä–∞—Å–ø—É—â–µ–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("—Ä–µ–≤–Ω–æ—Å—Ç—å", "defect"),
        ("—Å–∞–º–æ–æ–ø—Ä–∞–≤–¥–∞–Ω–∏–µ", "defect"),
        ("—Å–∞–º–æ—Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ", "defect"),
        ("—Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("—Å–∞—Ä–∫–∞–∑–º", "defect"),
        ("—Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å", "defect"),
        ("—Å—Ç–µ—Ä–µ–æ—Ç–∏–ø–Ω–æ—Å—Ç—å", "defect"),
        ("—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ", "defect"),
        ("—Å–∞–º–æ–æ–±–º–∞–Ω", "defect"),
        ("—Å–∞–º–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–æ", "defect"),
        ("—Ö–∏—Ç—Ä–æ—Å—Ç—å", "defect"),
        ("–∑–∞–Ω—É–¥—Å—Ç–≤–æ", "defect"),
        ("–∏–ª–ª—é–∑–æ—Ä–Ω–æ—Å—Ç—å", "defect"),
        ("—ç–≥–æ—Ü–µ–Ω—Ç—Ä–∏–∑–º", "defect"),
        ("—ç–≥–æ–∏–∑–º", "defect"),
        ("—Ö–∞–º—Å—Ç–≤–æ", "defect"),
        ("–≥–∏–ø–µ—Ä–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "defect"),
        ("–∑–∞–≤–∏—Å—Ç—å", "defect"),
        ("–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å", "strength"),
        ("–±–ª–∞–≥–æ—Ä–∞–∑—É–º–∏–µ", "strength"),
        ("–≤–µ–∂–ª–∏–≤–æ—Å—Ç—å", "strength"),
        ("–≤–µ—Ä–∞", "strength"),
        ("–≤–µ—Ä–Ω–æ—Å—Ç—å", "strength"),
        ("–≤–µ—Å—ë–ª–æ—Å—Ç—å", "strength"),
        ("–≤–∑–∞–∏–º–æ–ø–æ–º–æ—â—å", "strength"),
        ("–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("–≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å", "strength"),
        ("–≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ", "strength"),
        ("–≥–∏–±–∫–æ—Å—Ç—å", "strength"),
        ("–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å", "strength"),
        ("–¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å", "strength"),
        ("–∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–æ—Å—Ç—å", "strength"),
        ("–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("–¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("–∑–∞–±–æ—Ç–∞", "strength"),
        ("–∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("–∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "strength"),
        ("–∫—Ä–æ–ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å", "strength"),
        ("–ª—é–±–æ–≤—å", "strength"),
        ("–º—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("–º—É–¥—Ä–æ—Å—Ç—å", "strength"),
        ("–º—É–∂–µ—Å—Ç–≤–æ", "strength"),
        ("–Ω–µ–ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å", "strength"),
        ("–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å", "strength"),
        ("–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å", "strength"),
        ("–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "strength"),
        ("–ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("—Ä–∏—Ç–º–∏—á–Ω–æ—Å—Ç—å", "strength"),
        ("—Å–º–µ–ª–æ—Å—Ç—å", "strength"),
        ("—Å–º–∏—Ä–µ–Ω–∏–µ", "strength"),
        ("—Å–æ–±—Ä–∞–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ", "strength"),
        ("—Ç–∞–ª–∞–Ω—Ç", "strength"),
        ("—Ç–µ—Ä–ø–∏–º–æ—Å—Ç—å", "strength"),
        ("—Ç—Ä—É–¥–æ–ª—é–±–∏–µ", "strength"),
        ("—É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "strength"),
        ("—É–º", "strength"),
        ("—â–µ–¥—Ä–æ—Å—Ç—å", "strength"),
        ("—Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–æ—Å—Ç—å", "strength"),
        ("—É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω–æ—Å—Ç—å", "strength"),
    ]

    for name, type_ in traits:
        slug = safe_slugify(f"{type_}-{name}")
        CharacterTrait.objects.update_or_create(
            slug=slug,
            defaults={
                "name": name,
                "type": type_,
            }
        )


def create_resident_roles():
    roles = [
        ("–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç", "president"),
        ("–ù–°–û", "nso"),
        ("–®–ö", "shk"),
        ("–•–î", "hd"),
        ("–í–∏–∑–æ—Ä", "vizor"),
        ("–£—á–µ—Ç–æ–≤–µ–¥", "uchetoved"),
        ("–ê–π–±–æ–ª–∏—Ç", "aibolit"),
        ("–ß–∞–π—Ö–∞–Ω—â–∏–∫", "chaikhanshchik"),
        ("–û–≥–æ—Ä–æ–¥–Ω–∏–∫", "ogorodnik"),
        ("–®–†–†", "shrr"),
        ("–§–æ—Ç–æ–∫–æ—Ä", "fotokor"),
        ("–ë–ü–ö", "bpk"),
        ("–§–∏–∑–æ—Ä–≥", "fizorg"),
        ("–î–∏—Å–∫–æ–º–µ–Ω", "diskomen"),
        ("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å", "bibliotekar"),
        ("–ú–∞—Å—Å–æ–≤–∏–∫ –ó–∞—Ç–µ–π–Ω–∏–∫", "massovik-zateynik"),
        ("–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã", "organizatory"),
        ("–•–†.–í–†.", "hr-vr"),
        ("–¶–≤–µ—Ç–æ–≤–æ–¥", "tsvetovod"),
        ("–ñ–∏–≤–æ—Ç–Ω–æ–≤–æ–¥", "zhivotnovod"),
    ]
    for name, slug in roles:
        ResidentRole.objects.update_or_create(
            slug=slug,
            defaults={"name": name}
        )


def run():
    print("üîÑ Populating initial reference data (safe)...")
    create_emotional_data()
    create_character_traits()
    create_resident_roles()
    print("‚úÖ Initial reference data population complete.")


if __name__ == '__main__':
    run()