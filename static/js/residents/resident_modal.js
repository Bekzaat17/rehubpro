document.addEventListener("DOMContentLoaded", function () {
  let currentResidentId = null;

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
  window.openResidentModal = function (residentId) {
    currentResidentId = residentId;

    const modalElement = document.getElementById("residentModal");
    if (!modalElement) return console.error("–ú–æ–¥–∞–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");

    const modal = new bootstrap.Modal(modalElement);
    modal.show();

    // –û—á–∏—Å—Ç–∫–∞ –≤–∫–ª–∞–¥–æ–∫ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    document.getElementById("residentGeneralForm")?.reset();
    const dependencySelect = document.getElementById("residentDependency");
    if (dependencySelect) dependencySelect.innerHTML = "";

    const tasksBlock = document.getElementById("residentTasksContent");
    if (tasksBlock) tasksBlock.innerHTML = "–ó–∞–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...";

    const rolesBlock = document.getElementById("residentRolesContent");
    if (rolesBlock) rolesBlock.innerHTML = "–†–æ–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...";

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    fetch(`/residents/api/residents/${residentId}/profile/`)
      .then((res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è");
        return res.json();
      })
      .then((data) => {
        fillGeneralTab(data);
        fillTasksTab(data.tasks || []);
        fillRolesTab(data.roles || []);
      })
      .catch((err) => {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞.");
        console.error(err);
      });
  };

  // üßæ –í–∫–ª–∞–¥–∫–∞ "–û–±—â–µ–µ"
  function fillGeneralTab(data) {
    document.getElementById("residentModalLabel").textContent = `–õ–∏—á–Ω–æ–µ –¥–µ–ª–æ: ${data.full_name || ""}`;
    document.getElementById("residentName").value = data.full_name || "";
    document.getElementById("residentBirthdate").value = data.birthdate || "";
    document.getElementById("residentNotes").value = data.notes || "";

    const select = document.getElementById("residentDependency");
    if (!select) return;
    select.innerHTML = "";

    (data.dependency_choices || []).forEach(([value, label]) => {
      const option = document.createElement("option");
      option.value = value;
      option.textContent = label;
      if (value === data.dependency_type) option.selected = true;
      select.appendChild(option);
    });

    const statusSelect = document.getElementById("residentStatus");
    if (statusSelect) {
      statusSelect.innerHTML = "";
      (data.status_choices || []).forEach(([value, label]) => {
        const option = document.createElement("option");
        option.value = value;
        option.textContent = label;
        if (value === data.status) option.selected = true;
        statusSelect.appendChild(option);
      });
    }
  }

  // üìã –í–∫–ª–∞–¥–∫–∞ "–ó–∞–¥–∞–Ω–∏—è"
  function fillTasksTab(tasks) {
    const container = document.getElementById("residentTasksContent");
    if (!container) return;

    if (!tasks.length) {
      container.innerHTML = "<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 14 –¥–Ω–µ–π.</p>";
      return;
    }

    let html = `<div class="table-responsive"><table class="table table-bordered table-sm">
      <thead><tr><th>–î–∞—Ç–∞</th><th>–ó–∞–¥–∞–Ω–∏–µ</th><th>–°—Ç–∞—Ç—É—Å</th><th>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</th></tr></thead><tbody>`;

    tasks.forEach((t) => {
      html += `<tr>
        <td>${t.date || ""}</td>
        <td>${t.task_title || ""}</td>
        <td>${t.status_display || ""}</td>
        <td>${t.comment || ""}</td>
      </tr>`;
    });

    html += `</tbody></table></div>`;
    container.innerHTML = html;
  }

  // üóÇ –í–∫–ª–∞–¥–∫–∞ "–†–æ–ª–∏"
  function fillRolesTab(roles) {
    const container = document.getElementById("residentRolesContent");
    if (!container) return;

    if (!roles.length) {
      container.innerHTML = "<p>–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π.</p>";
      return;
    }

    let html = `<div class="table-responsive"><table class="table table-bordered table-sm">
      <thead><tr><th>–†–æ–ª—å</th><th>–ù–∞–∑–Ω–∞—á–µ–Ω–∞</th><th>–°–Ω—è—Ç–∞</th></tr></thead><tbody>`;

    roles.forEach((r) => {
      html += `<tr>
        <td>${r.role_title || ""}</td>
        <td>${r.assigned_at || ""}</td>
        <td>${r.unassigned_at || ""}</td>
      </tr>`;
    });

    html += `</tbody></table></div>`;
    container.innerHTML = html;
  }

  // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  document.getElementById("saveResidentBtn")?.addEventListener("click", function () {
    if (!currentResidentId) return;

    const payload = {
      notes: document.getElementById("residentNotes")?.value,
      dependency_type: document.getElementById("residentDependency")?.value,
      status: document.getElementById("residentStatus")?.value,
    };

    fetch(`/residents/api/residents/${currentResidentId}/profile/`, {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCSRFToken(),
      },
      body: JSON.stringify(payload),
    })
      .then((res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏");
        alert("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");

        // –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤
        if (typeof window.refreshResidentTableData === "function") {
          window.refreshResidentTableData();
        }
      })
      .catch((err) => {
        console.error(err);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.");
      });
  });

  // üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ª–µ—á–µ–Ω–∏—è
  document.getElementById("dischargeResidentBtn")?.addEventListener("click", function () {
    if (!currentResidentId) return;

    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞?")) return;

    fetch(`/residents/api/residents/${currentResidentId}/discharge/`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCSRFToken(),
      },
    })
      .then((res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ª–µ—á–µ–Ω–∏—è");
        alert("–õ–µ—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");

        // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
        bootstrap.Modal.getInstance(document.getElementById("residentModal"))?.hide();

        // –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
        if (typeof window.refreshResidentTableData === "function") {
          window.refreshResidentTableData();
        }
      })
      .catch((err) => {
        console.error(err);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ.");
      });
  });

  // üîê CSRF
  function getCSRFToken() {
    return document.querySelector('input[name="csrfmiddlewaretoken"]')?.value || "";
  }
});